Code for making api call with all scenarios covered for loading and as well as error

import React, { useState, useEffect } from 'react'

export const FetchingApi = () => {
    const [data, setData] = useState([])
    const [loading, setLoading] = useState(true)
    const [error, setError] = useState("");

    useEffect(() => {
        const fetchData = async () => {
            try {
                setLoading(true)
                const res = await fetch("https://jsonplaceholder.typicode.com/users")
                if (!res.ok) throw new Error('we have an issue')
                const data = await res.json();
                setData(data)
            }
            catch (e) {
                setError("somehting went wrong")
            }
            finally {
                setLoading(false)
            }

        }
        fetchData()
    }, [])


    if(loading) return(<>loading......</>)
        if(error) return(<> we have an error....</>)

    return (
        <>
            this is the fetch api getting caled<br />
            {
                data?.map(item => (
                    <div key={item.id}>
                        {item.name}
                    </div>
                ))
            }
        </>
    )
}


export default FetchingApi
